import base64
import Crypto
from Crypto.Cipher import AES
key = 'A#d3454%&48t49*k'.encode('utf8')
#key = '1234'
print(key)
BS = 16
pad = lambda s: bytes(s + (BS - len(s) % BS) * chr(BS - len(s) % BS), 'utf-8')
unpad = lambda s : s[0:-ord(s[-1:])]
def encrypt(raw):
    raw = pad(raw) # iv = Random.new().read(AES.block_size) # iv= bytes([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ,0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,0x00]) # print(iv)
    #
    cipher = AES.new(key, AES.MODE_CBC, key)
    return base64.b64encode(cipher.encrypt(raw))
    #return raw

def decrypt(enc):
    #print("enc1",enc)
    enc = base64.b64decode(enc)
    #print("enc2", enc)
    cipher = AES.new(key, AES.MODE_CBC, key)
    return (unpad(cipher.decrypt(enc)))
    # return enc

#print(encrypt('{"platform":"web","userID":"101","password":"1234"}'))

# import hashlib
# from Crypto import Random
# from Crypto.Cipher import AES
#
# class AESCipher(object):
#
#     def __init__(self, key):
#         self.bs = 32
#         self.key = hashlib.sha256(key.encode()).digest()
#
#     def encrypt(self, raw):
#         raw = self._pad(raw)
#         iv = Random.new().read(AES.block_size)
#         cipher = AES.new(self.key, AES.MODE_CBC, iv)
#         return base64.b64encode(iv + cipher.encrypt(raw))
#
#     def decrypt(self, enc):
#         enc = base64.b64decode(enc)
#         iv = enc[:AES.block_size]
#         cipher = AES.new(self.key, AES.MODE_CBC, iv)
#         return self._unpad(cipher.decrypt(enc[AES.block_size:])).decode('utf-8')
#
#     def _pad(self, s):
#         return s + (self.bs - len(s) % self.bs) * chr(self.bs - len(s) % self.bs)
#
#     @staticmethod
#     def _unpad(s):
#         return s[:-ord(s[len(s)-1:])]

print(encrypt('{"name":"[object Object]","platform":"wtickebportal","empid":400603,"msg":"My Ticket Status","searchFlag":"click","main_op_id":"","userName":"pushpak","userID":"1003","mainIssue":"Technoogy","language":"","userType ":"CUSTOMER"}'))
# print(encrypt('{"name": "","platform": "webportal","empid": 400603,"msg": "leave balance","userType":"agent","language": "hi","searchFlag": "","main_op_id": "","userName": "pushpak", "userID": "1003", "mainIssue": "Technoogy","token":""}'))
# print(decrypt("JMyNcLxCKX0MNLBwMBt3SQUzt9Hm17Ys3Uv0LV5ii7/2Vnn67pUpreN6WO3ZwTFvxJTm+UxWVAOeFw3hJSyFzOoXe3jn4I2Decfg/aTBVaNmngR6NAt9Wp3tcvUNtJ84zW7EPac+7oMKB/MBeMoAKruy2KqciBddVrspr/3kGr3txvwhMqZrNXkYC95IeiKlSA97kIgodz7Gpbykewow2OKjQfJ+Vj1HVABIDDUMKnch9dSZhfPGDHstNfqrP0wrpa3yhE+Wih04aHk0G9DTYIKAaF2PP2o29VtyGla+Ro9SzZjqtPuILWiVvE1vKnaOXqKKBgN1mew38J864s+vj/jXNaj/0HrgXcFbQSmV10NC1Bxhvo9FFuLBq8/zzBy8m24sSLWOn51ccA6MVIILqCxAM3yRWYbrLC0HwV11BGIENj9UzpiJwlTiBNkBnAE/TTg/GROnVyY+mD+uyoyAIMEW8syCzoky17j53ME9EEY="))
# print(decrypt("PsPxjI/e4OjmR6FHMLBWOPYvrW41x6MbmtJsKD99wWrzPPiC/BV0J2myh7s8/FCgwHN6V6tU5FNFRypRnx5Krs38pKsmtN0SBpmtiAwK9VEx112iL1NkdkJs2JDjS/RZpbQr0CFkv5P05VErapnQQlQ6rD67oZDbp37j8B082mKzgPhlQGTeK9Gnpy9ArQd7"))

#print(decrypt(''))

#print(encrypt('{"userID":"1003"}'))
# print(encrypt('{"surveyID":"4"}'))
# print(encrypt('{"name": "","platform": "webportal","empid": 400603,"msg": "can ","userType":"agent","language": "en","searchFlag": "","main_op_id": "","userName": "pushpak", "userID": "1003", "mainIssue": "Technoogy","token":""}'
#  ))
#print(encrypt('{"userID":"1003","userName":"pushpak","userToken":"None"}'))
#print(decrypt('dRLDoqh4byD+jIqUPPVvFD9PMHtIeLMwJSBUjnVOwbF4Frk9ayXbj3tp4m98C6wlnzsNIcCc3UNnzd+Kt/RVTshEfFKGaexQtARpQMh8WiTtJH6eMabyRLQvnhuRxTZfolbFsM7DeD/jrufr/kQLv+z3TTXwgfJrLnX4az0W0YH14RryS0OafOTFzv+3oV1dS/yv2y5nyMk/31xZxZuogYmXOFzlypfZz8B5qUAlZK8cMGeSxD6tgIt2be8bU3/aT43JHJI2Cor5ZizTTslEmg=='))